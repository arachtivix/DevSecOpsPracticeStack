AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Proton Service - Spring Boot ECS Service'

Parameters:
  EnvironmentName:
    Type: String
    Description: 'Environment name'
  
  ServiceName:
    Type: String
    Description: 'Service name'

  ImageUrl:
    Type: String
    Description: 'Docker image URL'

  ContainerPort:
    Type: Number
    Default: 8080
    Description: 'Container port'

  TaskCpu:
    Type: Number
    Default: 256
    Description: 'Task CPU units'

  TaskMemory:
    Type: Number
    Default: 512
    Description: 'Task memory (MB)'

  DesiredCount:
    Type: Number
    Default: 1
    Description: 'Desired task count'

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${ServiceName}
      Cpu: !Ref TaskCpu
      Memory: !Ref TaskMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
        - Name: !Ref ServiceName
          Image: !Ref ImageUrl
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${ServiceName}
      RetentionInDays: 30

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref ServiceName
      Cluster: 
        Fn::ImportValue: !Sub ${EnvironmentName}-ECSClusterName
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: !Ref DesiredCount
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
            - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet1
            - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet2
          SecurityGroups:
            - !Ref ContainerSecurityGroup

  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${ServiceName} container security group
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
          CidrIp: 0.0.0.0/0

Outputs:
  ServiceName:
    Description: The name of the ECS service
    Value: !Ref Service
    Export:
      Name: !Sub ${ServiceName}-ServiceName

  TaskDefinitionArn:
    Description: The ARN of the task definition
    Value: !Ref TaskDefinition
    Export:
      Name: !Sub ${ServiceName}-TaskDefinitionArn